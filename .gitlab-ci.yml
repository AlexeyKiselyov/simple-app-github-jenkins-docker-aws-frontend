variables:
  IMAGE_NAME: musicman123/music_man_docker_repo
  IMAGE_TAG: tweets_app

stages:
  - test
  - build
  - deploy

run_tests:
  stage: test
  image: node
  before_script:
    - apt-get update && npm install
  script:
    - npm run lint:js

build_image:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: '/certs'
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASS
  script:
    - docker build --build-arg REACT_APP_API_URL=$REACT_APP_API_URL -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_KEY ubuntu@$HOST_IP " docker login -u $DOCKER_USERNAME -p $DOCKER_PASS && docker stop $IMAGE_TAG;docker rm $IMAGE_TAG || true && docker rmi $IMAGE_NAME:$IMAGE_TAG || true && docker run --name $IMAGE_TAG --restart unless-stopped -d -p 80:80 $IMAGE_NAME:$IMAGE_TAG"
